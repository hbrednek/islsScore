/*
 *  Copyright 2011 Michael R. Elliott <mre@m79.net>.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */

/*
 * DeclareWinner.java
 *
 * Created on Jan 5, 2011, 10:06:47 PM
 */

package org.sc205.controller;

import org.sc205.model.Game;
import org.sc205.model.GameSet;
import org.sc205.model.Partnership;

/**
 *
 * @author Michael R. Elliott <mre@m79.net>
 */
public class DeclareWinner extends javax.swing.JDialog {

    /** Creates new form DeclareWinner */
    public DeclareWinner(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      buttonGroup1 = new javax.swing.ButtonGroup();
      cancel = new javax.swing.JButton();
      ok = new javax.swing.JButton();
      title = new javax.swing.JLabel();
      selector = new org.sc205.view.FlagRadioButtonForm();
      notPlayed = new javax.swing.JCheckBox();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      setName("Form"); // NOI18N

      org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.sc205.ISLS.class).getContext().getResourceMap(DeclareWinner.class);
      cancel.setText(resourceMap.getString("cancel.text")); // NOI18N
      cancel.setName("cancel"); // NOI18N
      cancel.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelActionPerformed(evt);
         }
      });

      ok.setText(resourceMap.getString("ok.text")); // NOI18N
      ok.setName("ok"); // NOI18N
      ok.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            okActionPerformed(evt);
         }
      });

      title.setBackground(resourceMap.getColor("title.background")); // NOI18N
      title.setFont(resourceMap.getFont("title.font")); // NOI18N
      title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      title.setText(resourceMap.getString("title.text")); // NOI18N
      title.setBorder(javax.swing.BorderFactory.createEtchedBorder());
      title.setName("title"); // NOI18N
      title.setOpaque(true);

      selector.setName("selector"); // NOI18N

      notPlayed.setText(resourceMap.getString("notPlayed.text")); // NOI18N
      notPlayed.setName("notPlayed"); // NOI18N

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                  .addComponent(selector, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(ok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel))
                     .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(notPlayed)))))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGap(12, 12, 12)
                  .addComponent(selector, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                  .addContainerGap())
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                  .addGap(30, 30, 30)
                  .addComponent(notPlayed)
                  .addGap(144, 144, 144)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(ok)
                     .addComponent(cancel))
                  .addGap(27, 27, 27))))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
       this.dispose();
}//GEN-LAST:event_cancelActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
       if (notPlayed.isSelected()) {
          game.rollback();
          GameSet.instance().showConflicts( game );
          dispose();
          return;
       }
       Partnership.Affiliation affiliation = selector.selection();
       final boolean looksOK = affiliation != null;
       if (looksOK) {
          GameSet.instance().declareWinner( game, affiliation );
          dispose();
       }
}//GEN-LAST:event_okActionPerformed

    Partnership.Affiliation winner = null;

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DeclareWinner dialog = new DeclareWinner(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.ButtonGroup buttonGroup1;
   private javax.swing.JButton cancel;
   private javax.swing.JCheckBox notPlayed;
   private javax.swing.JButton ok;
   private org.sc205.view.FlagRadioButtonForm selector;
   private javax.swing.JLabel title;
   // End of variables declaration//GEN-END:variables

   public void setGame( Game game ) {
      this.game = game;
   }
   // End of variables declaration

   private Game game;
}
